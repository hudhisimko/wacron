//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Contacts = newContactsTable("simko_gateway", "contacts", "")

type contactsTable struct {
	mysql.Table

	// Columns
	ID     mysql.ColumnInteger
	Sender mysql.ColumnString
	Number mysql.ColumnString
	Name   mysql.ColumnString
	Type   mysql.ColumnString
	MakeBy mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type ContactsTable struct {
	contactsTable

	NEW contactsTable
}

// AS creates new ContactsTable with assigned alias
func (a ContactsTable) AS(alias string) *ContactsTable {
	return newContactsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ContactsTable with assigned schema name
func (a ContactsTable) FromSchema(schemaName string) *ContactsTable {
	return newContactsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ContactsTable with assigned table prefix
func (a ContactsTable) WithPrefix(prefix string) *ContactsTable {
	return newContactsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ContactsTable with assigned table suffix
func (a ContactsTable) WithSuffix(suffix string) *ContactsTable {
	return newContactsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newContactsTable(schemaName, tableName, alias string) *ContactsTable {
	return &ContactsTable{
		contactsTable: newContactsTableImpl(schemaName, tableName, alias),
		NEW:           newContactsTableImpl("", "new", ""),
	}
}

func newContactsTableImpl(schemaName, tableName, alias string) contactsTable {
	var (
		IDColumn       = mysql.IntegerColumn("id")
		SenderColumn   = mysql.StringColumn("sender")
		NumberColumn   = mysql.StringColumn("number")
		NameColumn     = mysql.StringColumn("name")
		TypeColumn     = mysql.StringColumn("type")
		MakeByColumn   = mysql.StringColumn("make_by")
		allColumns     = mysql.ColumnList{IDColumn, SenderColumn, NumberColumn, NameColumn, TypeColumn, MakeByColumn}
		mutableColumns = mysql.ColumnList{SenderColumn, NumberColumn, NameColumn, TypeColumn, MakeByColumn}
	)

	return contactsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:     IDColumn,
		Sender: SenderColumn,
		Number: NumberColumn,
		Name:   NameColumn,
		Type:   TypeColumn,
		MakeBy: MakeByColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
