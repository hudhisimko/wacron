//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var SmsInbox = newSmsInboxTable("simko_gateway", "sms_inbox", "")

type smsInboxTable struct {
	mysql.Table

	// Columns
	ID       mysql.ColumnInteger
	Sourceno mysql.ColumnString
	Tgl      mysql.ColumnTimestamp
	Text     mysql.ColumnString
	Port     mysql.ColumnString
	IP       mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type SmsInboxTable struct {
	smsInboxTable

	NEW smsInboxTable
}

// AS creates new SmsInboxTable with assigned alias
func (a SmsInboxTable) AS(alias string) *SmsInboxTable {
	return newSmsInboxTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SmsInboxTable with assigned schema name
func (a SmsInboxTable) FromSchema(schemaName string) *SmsInboxTable {
	return newSmsInboxTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SmsInboxTable with assigned table prefix
func (a SmsInboxTable) WithPrefix(prefix string) *SmsInboxTable {
	return newSmsInboxTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SmsInboxTable with assigned table suffix
func (a SmsInboxTable) WithSuffix(suffix string) *SmsInboxTable {
	return newSmsInboxTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSmsInboxTable(schemaName, tableName, alias string) *SmsInboxTable {
	return &SmsInboxTable{
		smsInboxTable: newSmsInboxTableImpl(schemaName, tableName, alias),
		NEW:           newSmsInboxTableImpl("", "new", ""),
	}
}

func newSmsInboxTableImpl(schemaName, tableName, alias string) smsInboxTable {
	var (
		IDColumn       = mysql.IntegerColumn("id")
		SourcenoColumn = mysql.StringColumn("sourceno")
		TglColumn      = mysql.TimestampColumn("tgl")
		TextColumn     = mysql.StringColumn("text")
		PortColumn     = mysql.StringColumn("port")
		IPColumn       = mysql.StringColumn("ip")
		allColumns     = mysql.ColumnList{IDColumn, SourcenoColumn, TglColumn, TextColumn, PortColumn, IPColumn}
		mutableColumns = mysql.ColumnList{SourcenoColumn, TglColumn, TextColumn, PortColumn, IPColumn}
	)

	return smsInboxTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:       IDColumn,
		Sourceno: SourcenoColumn,
		Tgl:      TglColumn,
		Text:     TextColumn,
		Port:     PortColumn,
		IP:       IPColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
