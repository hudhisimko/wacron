//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Pesan = newPesanTable("simko_gateway", "pesan", "")

type pesanTable struct {
	mysql.Table

	// Columns
	ID          mysql.ColumnInteger
	Sender      mysql.ColumnString
	Nomor       mysql.ColumnString
	Pesan       mysql.ColumnString
	Media       mysql.ColumnString
	Status      mysql.ColumnString
	Jadwal      mysql.ColumnTimestamp
	MakeBy      mysql.ColumnString
	Time        mysql.ColumnTimestamp
	KodeLembaga mysql.ColumnString
	KodeCab     mysql.ColumnString
	Modul       mysql.ColumnString
	Proses      mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type PesanTable struct {
	pesanTable

	NEW pesanTable
}

// AS creates new PesanTable with assigned alias
func (a PesanTable) AS(alias string) *PesanTable {
	return newPesanTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PesanTable with assigned schema name
func (a PesanTable) FromSchema(schemaName string) *PesanTable {
	return newPesanTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new PesanTable with assigned table prefix
func (a PesanTable) WithPrefix(prefix string) *PesanTable {
	return newPesanTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new PesanTable with assigned table suffix
func (a PesanTable) WithSuffix(suffix string) *PesanTable {
	return newPesanTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newPesanTable(schemaName, tableName, alias string) *PesanTable {
	return &PesanTable{
		pesanTable: newPesanTableImpl(schemaName, tableName, alias),
		NEW:        newPesanTableImpl("", "new", ""),
	}
}

func newPesanTableImpl(schemaName, tableName, alias string) pesanTable {
	var (
		IDColumn          = mysql.IntegerColumn("id")
		SenderColumn      = mysql.StringColumn("sender")
		NomorColumn       = mysql.StringColumn("nomor")
		PesanColumn       = mysql.StringColumn("pesan")
		MediaColumn       = mysql.StringColumn("media")
		StatusColumn      = mysql.StringColumn("status")
		JadwalColumn      = mysql.TimestampColumn("jadwal")
		MakeByColumn      = mysql.StringColumn("make_by")
		TimeColumn        = mysql.TimestampColumn("time")
		KodeLembagaColumn = mysql.StringColumn("kode_lembaga")
		KodeCabColumn     = mysql.StringColumn("kode_cab")
		ModulColumn       = mysql.StringColumn("modul")
		ProsesColumn      = mysql.IntegerColumn("proses")
		allColumns        = mysql.ColumnList{IDColumn, SenderColumn, NomorColumn, PesanColumn, MediaColumn, StatusColumn, JadwalColumn, MakeByColumn, TimeColumn, KodeLembagaColumn, KodeCabColumn, ModulColumn, ProsesColumn}
		mutableColumns    = mysql.ColumnList{SenderColumn, NomorColumn, PesanColumn, MediaColumn, StatusColumn, JadwalColumn, MakeByColumn, TimeColumn, KodeLembagaColumn, KodeCabColumn, ModulColumn, ProsesColumn}
	)

	return pesanTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		Sender:      SenderColumn,
		Nomor:       NomorColumn,
		Pesan:       PesanColumn,
		Media:       MediaColumn,
		Status:      StatusColumn,
		Jadwal:      JadwalColumn,
		MakeBy:      MakeByColumn,
		Time:        TimeColumn,
		KodeLembaga: KodeLembagaColumn,
		KodeCab:     KodeCabColumn,
		Modul:       ModulColumn,
		Proses:      ProsesColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
