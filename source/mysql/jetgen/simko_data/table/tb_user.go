//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var TbUser = newTbUserTable("simko_data", "tb_user", "")

type tbUserTable struct {
	mysql.Table

	// Columns
	ID                 mysql.ColumnInteger
	FirstName          mysql.ColumnString
	LastName           mysql.ColumnString
	Username           mysql.ColumnString
	Password           mysql.ColumnString
	Email              mysql.ColumnString
	KodeCab            mysql.ColumnString
	KodeAo             mysql.ColumnString
	KodePerk           mysql.ColumnString
	Status             mysql.ColumnString
	IDGroup            mysql.ColumnInteger
	AksesDekstop       mysql.ColumnBool
	AksesWebsite       mysql.ColumnBool
	AksesMobile        mysql.ColumnBool
	ChangeLastPassword mysql.ColumnTimestamp
	TglInsert          mysql.ColumnTimestamp
	LastLogin          mysql.ColumnTimestamp
	Cookie             mysql.ColumnString
	LimitPengeluaran   mysql.ColumnFloat
	StatusLimit        mysql.ColumnBool

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type TbUserTable struct {
	tbUserTable

	NEW tbUserTable
}

// AS creates new TbUserTable with assigned alias
func (a TbUserTable) AS(alias string) *TbUserTable {
	return newTbUserTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TbUserTable with assigned schema name
func (a TbUserTable) FromSchema(schemaName string) *TbUserTable {
	return newTbUserTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TbUserTable with assigned table prefix
func (a TbUserTable) WithPrefix(prefix string) *TbUserTable {
	return newTbUserTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TbUserTable with assigned table suffix
func (a TbUserTable) WithSuffix(suffix string) *TbUserTable {
	return newTbUserTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTbUserTable(schemaName, tableName, alias string) *TbUserTable {
	return &TbUserTable{
		tbUserTable: newTbUserTableImpl(schemaName, tableName, alias),
		NEW:         newTbUserTableImpl("", "new", ""),
	}
}

func newTbUserTableImpl(schemaName, tableName, alias string) tbUserTable {
	var (
		IDColumn                 = mysql.IntegerColumn("id")
		FirstNameColumn          = mysql.StringColumn("first_name")
		LastNameColumn           = mysql.StringColumn("last_name")
		UsernameColumn           = mysql.StringColumn("username")
		PasswordColumn           = mysql.StringColumn("password")
		EmailColumn              = mysql.StringColumn("email")
		KodeCabColumn            = mysql.StringColumn("kode_cab")
		KodeAoColumn             = mysql.StringColumn("kode_ao")
		KodePerkColumn           = mysql.StringColumn("kode_perk")
		StatusColumn             = mysql.StringColumn("status")
		IDGroupColumn            = mysql.IntegerColumn("id_group")
		AksesDekstopColumn       = mysql.BoolColumn("akses_dekstop")
		AksesWebsiteColumn       = mysql.BoolColumn("akses_website")
		AksesMobileColumn        = mysql.BoolColumn("akses_mobile")
		ChangeLastPasswordColumn = mysql.TimestampColumn("change_last_password")
		TglInsertColumn          = mysql.TimestampColumn("tgl_insert")
		LastLoginColumn          = mysql.TimestampColumn("last_login")
		CookieColumn             = mysql.StringColumn("cookie")
		LimitPengeluaranColumn   = mysql.FloatColumn("limit_pengeluaran")
		StatusLimitColumn        = mysql.BoolColumn("status_limit")
		allColumns               = mysql.ColumnList{IDColumn, FirstNameColumn, LastNameColumn, UsernameColumn, PasswordColumn, EmailColumn, KodeCabColumn, KodeAoColumn, KodePerkColumn, StatusColumn, IDGroupColumn, AksesDekstopColumn, AksesWebsiteColumn, AksesMobileColumn, ChangeLastPasswordColumn, TglInsertColumn, LastLoginColumn, CookieColumn, LimitPengeluaranColumn, StatusLimitColumn}
		mutableColumns           = mysql.ColumnList{FirstNameColumn, LastNameColumn, PasswordColumn, EmailColumn, KodeCabColumn, KodeAoColumn, KodePerkColumn, StatusColumn, IDGroupColumn, AksesDekstopColumn, AksesWebsiteColumn, AksesMobileColumn, ChangeLastPasswordColumn, TglInsertColumn, LastLoginColumn, CookieColumn, LimitPengeluaranColumn, StatusLimitColumn}
	)

	return tbUserTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                 IDColumn,
		FirstName:          FirstNameColumn,
		LastName:           LastNameColumn,
		Username:           UsernameColumn,
		Password:           PasswordColumn,
		Email:              EmailColumn,
		KodeCab:            KodeCabColumn,
		KodeAo:             KodeAoColumn,
		KodePerk:           KodePerkColumn,
		Status:             StatusColumn,
		IDGroup:            IDGroupColumn,
		AksesDekstop:       AksesDekstopColumn,
		AksesWebsite:       AksesWebsiteColumn,
		AksesMobile:        AksesMobileColumn,
		ChangeLastPassword: ChangeLastPasswordColumn,
		TglInsert:          TglInsertColumn,
		LastLogin:          LastLoginColumn,
		Cookie:             CookieColumn,
		LimitPengeluaran:   LimitPengeluaranColumn,
		StatusLimit:        StatusLimitColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
