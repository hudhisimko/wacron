//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var TbUserAuthentication = newTbUserAuthenticationTable("simko_data", "tb_user_authentication", "")

type tbUserAuthenticationTable struct {
	mysql.Table

	// Columns
	ID        mysql.ColumnInteger
	UsersID   mysql.ColumnInteger
	Token     mysql.ColumnString
	ExpiredAt mysql.ColumnTimestamp
	CreatedAt mysql.ColumnTimestamp
	UpdatedAt mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type TbUserAuthenticationTable struct {
	tbUserAuthenticationTable

	NEW tbUserAuthenticationTable
}

// AS creates new TbUserAuthenticationTable with assigned alias
func (a TbUserAuthenticationTable) AS(alias string) *TbUserAuthenticationTable {
	return newTbUserAuthenticationTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TbUserAuthenticationTable with assigned schema name
func (a TbUserAuthenticationTable) FromSchema(schemaName string) *TbUserAuthenticationTable {
	return newTbUserAuthenticationTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TbUserAuthenticationTable with assigned table prefix
func (a TbUserAuthenticationTable) WithPrefix(prefix string) *TbUserAuthenticationTable {
	return newTbUserAuthenticationTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TbUserAuthenticationTable with assigned table suffix
func (a TbUserAuthenticationTable) WithSuffix(suffix string) *TbUserAuthenticationTable {
	return newTbUserAuthenticationTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTbUserAuthenticationTable(schemaName, tableName, alias string) *TbUserAuthenticationTable {
	return &TbUserAuthenticationTable{
		tbUserAuthenticationTable: newTbUserAuthenticationTableImpl(schemaName, tableName, alias),
		NEW:                       newTbUserAuthenticationTableImpl("", "new", ""),
	}
}

func newTbUserAuthenticationTableImpl(schemaName, tableName, alias string) tbUserAuthenticationTable {
	var (
		IDColumn        = mysql.IntegerColumn("id")
		UsersIDColumn   = mysql.IntegerColumn("users_id")
		TokenColumn     = mysql.StringColumn("token")
		ExpiredAtColumn = mysql.TimestampColumn("expired_at")
		CreatedAtColumn = mysql.TimestampColumn("created_at")
		UpdatedAtColumn = mysql.TimestampColumn("updated_at")
		allColumns      = mysql.ColumnList{IDColumn, UsersIDColumn, TokenColumn, ExpiredAtColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns  = mysql.ColumnList{UsersIDColumn, TokenColumn, ExpiredAtColumn, CreatedAtColumn, UpdatedAtColumn}
	)

	return tbUserAuthenticationTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		UsersID:   UsersIDColumn,
		Token:     TokenColumn,
		ExpiredAt: ExpiredAtColumn,
		CreatedAt: CreatedAtColumn,
		UpdatedAt: UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
