//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Logger = newLoggerTable("simko_data", "logger", "")

type loggerTable struct {
	mysql.Table

	// Columns
	NoHp        mysql.ColumnString
	TglTrans    mysql.ColumnDate
	Jam         mysql.ColumnTime
	Action      mysql.ColumnString
	Ket         mysql.ColumnString
	KodeLembaga mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type LoggerTable struct {
	loggerTable

	NEW loggerTable
}

// AS creates new LoggerTable with assigned alias
func (a LoggerTable) AS(alias string) *LoggerTable {
	return newLoggerTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new LoggerTable with assigned schema name
func (a LoggerTable) FromSchema(schemaName string) *LoggerTable {
	return newLoggerTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new LoggerTable with assigned table prefix
func (a LoggerTable) WithPrefix(prefix string) *LoggerTable {
	return newLoggerTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new LoggerTable with assigned table suffix
func (a LoggerTable) WithSuffix(suffix string) *LoggerTable {
	return newLoggerTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newLoggerTable(schemaName, tableName, alias string) *LoggerTable {
	return &LoggerTable{
		loggerTable: newLoggerTableImpl(schemaName, tableName, alias),
		NEW:         newLoggerTableImpl("", "new", ""),
	}
}

func newLoggerTableImpl(schemaName, tableName, alias string) loggerTable {
	var (
		NoHpColumn        = mysql.StringColumn("no_hp")
		TglTransColumn    = mysql.DateColumn("tgl_trans")
		JamColumn         = mysql.TimeColumn("jam")
		ActionColumn      = mysql.StringColumn("action")
		KetColumn         = mysql.StringColumn("ket")
		KodeLembagaColumn = mysql.StringColumn("kode_lembaga")
		allColumns        = mysql.ColumnList{NoHpColumn, TglTransColumn, JamColumn, ActionColumn, KetColumn, KodeLembagaColumn}
		mutableColumns    = mysql.ColumnList{NoHpColumn, TglTransColumn, JamColumn, ActionColumn, KetColumn, KodeLembagaColumn}
	)

	return loggerTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		NoHp:        NoHpColumn,
		TglTrans:    TglTransColumn,
		Jam:         JamColumn,
		Action:      ActionColumn,
		Ket:         KetColumn,
		KodeLembaga: KodeLembagaColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
