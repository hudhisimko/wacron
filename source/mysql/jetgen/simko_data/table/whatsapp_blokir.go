//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var WhatsappBlokir = newWhatsappBlokirTable("simko_data", "whatsapp_blokir", "")

type whatsappBlokirTable struct {
	mysql.Table

	// Columns
	Phone mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type WhatsappBlokirTable struct {
	whatsappBlokirTable

	NEW whatsappBlokirTable
}

// AS creates new WhatsappBlokirTable with assigned alias
func (a WhatsappBlokirTable) AS(alias string) *WhatsappBlokirTable {
	return newWhatsappBlokirTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new WhatsappBlokirTable with assigned schema name
func (a WhatsappBlokirTable) FromSchema(schemaName string) *WhatsappBlokirTable {
	return newWhatsappBlokirTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new WhatsappBlokirTable with assigned table prefix
func (a WhatsappBlokirTable) WithPrefix(prefix string) *WhatsappBlokirTable {
	return newWhatsappBlokirTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new WhatsappBlokirTable with assigned table suffix
func (a WhatsappBlokirTable) WithSuffix(suffix string) *WhatsappBlokirTable {
	return newWhatsappBlokirTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newWhatsappBlokirTable(schemaName, tableName, alias string) *WhatsappBlokirTable {
	return &WhatsappBlokirTable{
		whatsappBlokirTable: newWhatsappBlokirTableImpl(schemaName, tableName, alias),
		NEW:                 newWhatsappBlokirTableImpl("", "new", ""),
	}
}

func newWhatsappBlokirTableImpl(schemaName, tableName, alias string) whatsappBlokirTable {
	var (
		PhoneColumn    = mysql.StringColumn("phone")
		allColumns     = mysql.ColumnList{PhoneColumn}
		mutableColumns = mysql.ColumnList{}
	)

	return whatsappBlokirTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Phone: PhoneColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
