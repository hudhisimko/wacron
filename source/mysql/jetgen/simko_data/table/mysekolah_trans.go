//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var MysekolahTrans = newMysekolahTransTable("simko_data", "mysekolah_trans", "")

type mysekolahTransTable struct {
	mysql.Table

	// Columns
	Username    mysql.ColumnString
	Nis         mysql.ColumnString
	Nama        mysql.ColumnString
	KdLembaga   mysql.ColumnString
	Namalembaga mysql.ColumnString
	Deskripsi   mysql.ColumnString
	StatusData  mysql.ColumnBool

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type MysekolahTransTable struct {
	mysekolahTransTable

	NEW mysekolahTransTable
}

// AS creates new MysekolahTransTable with assigned alias
func (a MysekolahTransTable) AS(alias string) *MysekolahTransTable {
	return newMysekolahTransTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new MysekolahTransTable with assigned schema name
func (a MysekolahTransTable) FromSchema(schemaName string) *MysekolahTransTable {
	return newMysekolahTransTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new MysekolahTransTable with assigned table prefix
func (a MysekolahTransTable) WithPrefix(prefix string) *MysekolahTransTable {
	return newMysekolahTransTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new MysekolahTransTable with assigned table suffix
func (a MysekolahTransTable) WithSuffix(suffix string) *MysekolahTransTable {
	return newMysekolahTransTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newMysekolahTransTable(schemaName, tableName, alias string) *MysekolahTransTable {
	return &MysekolahTransTable{
		mysekolahTransTable: newMysekolahTransTableImpl(schemaName, tableName, alias),
		NEW:                 newMysekolahTransTableImpl("", "new", ""),
	}
}

func newMysekolahTransTableImpl(schemaName, tableName, alias string) mysekolahTransTable {
	var (
		UsernameColumn    = mysql.StringColumn("username")
		NisColumn         = mysql.StringColumn("nis")
		NamaColumn        = mysql.StringColumn("nama")
		KdLembagaColumn   = mysql.StringColumn("kd_lembaga")
		NamalembagaColumn = mysql.StringColumn("namalembaga")
		DeskripsiColumn   = mysql.StringColumn("deskripsi")
		StatusDataColumn  = mysql.BoolColumn("status_data")
		allColumns        = mysql.ColumnList{UsernameColumn, NisColumn, NamaColumn, KdLembagaColumn, NamalembagaColumn, DeskripsiColumn, StatusDataColumn}
		mutableColumns    = mysql.ColumnList{NamaColumn, KdLembagaColumn, NamalembagaColumn, DeskripsiColumn, StatusDataColumn}
	)

	return mysekolahTransTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Username:    UsernameColumn,
		Nis:         NisColumn,
		Nama:        NamaColumn,
		KdLembaga:   KdLembagaColumn,
		Namalembaga: NamalembagaColumn,
		Deskripsi:   DeskripsiColumn,
		StatusData:  StatusDataColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
