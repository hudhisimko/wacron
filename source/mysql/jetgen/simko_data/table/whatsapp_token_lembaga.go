//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var WhatsappTokenLembaga = newWhatsappTokenLembagaTable("simko_data", "whatsapp_token_lembaga", "")

type whatsappTokenLembagaTable struct {
	mysql.Table

	// Columns
	KodeLembaga mysql.ColumnString
	NoWhatsapp  mysql.ColumnString
	Token       mysql.ColumnString
	URL         mysql.ColumnString
	StatusAktif mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type WhatsappTokenLembagaTable struct {
	whatsappTokenLembagaTable

	NEW whatsappTokenLembagaTable
}

// AS creates new WhatsappTokenLembagaTable with assigned alias
func (a WhatsappTokenLembagaTable) AS(alias string) *WhatsappTokenLembagaTable {
	return newWhatsappTokenLembagaTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new WhatsappTokenLembagaTable with assigned schema name
func (a WhatsappTokenLembagaTable) FromSchema(schemaName string) *WhatsappTokenLembagaTable {
	return newWhatsappTokenLembagaTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new WhatsappTokenLembagaTable with assigned table prefix
func (a WhatsappTokenLembagaTable) WithPrefix(prefix string) *WhatsappTokenLembagaTable {
	return newWhatsappTokenLembagaTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new WhatsappTokenLembagaTable with assigned table suffix
func (a WhatsappTokenLembagaTable) WithSuffix(suffix string) *WhatsappTokenLembagaTable {
	return newWhatsappTokenLembagaTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newWhatsappTokenLembagaTable(schemaName, tableName, alias string) *WhatsappTokenLembagaTable {
	return &WhatsappTokenLembagaTable{
		whatsappTokenLembagaTable: newWhatsappTokenLembagaTableImpl(schemaName, tableName, alias),
		NEW:                       newWhatsappTokenLembagaTableImpl("", "new", ""),
	}
}

func newWhatsappTokenLembagaTableImpl(schemaName, tableName, alias string) whatsappTokenLembagaTable {
	var (
		KodeLembagaColumn = mysql.StringColumn("kode_lembaga")
		NoWhatsappColumn  = mysql.StringColumn("no_whatsapp")
		TokenColumn       = mysql.StringColumn("token")
		URLColumn         = mysql.StringColumn("url")
		StatusAktifColumn = mysql.IntegerColumn("status_aktif")
		allColumns        = mysql.ColumnList{KodeLembagaColumn, NoWhatsappColumn, TokenColumn, URLColumn, StatusAktifColumn}
		mutableColumns    = mysql.ColumnList{NoWhatsappColumn, TokenColumn, URLColumn, StatusAktifColumn}
	)

	return whatsappTokenLembagaTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		KodeLembaga: KodeLembagaColumn,
		NoWhatsapp:  NoWhatsappColumn,
		Token:       TokenColumn,
		URL:         URLColumn,
		StatusAktif: StatusAktifColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
