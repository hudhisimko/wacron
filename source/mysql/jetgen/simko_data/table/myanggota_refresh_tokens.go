//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var MyanggotaRefreshTokens = newMyanggotaRefreshTokensTable("simko_data", "myanggota_refresh_tokens", "")

type myanggotaRefreshTokensTable struct {
	mysql.Table

	// Columns
	Token     mysql.ColumnString
	LoginID   mysql.ColumnInteger
	CreatedAt mysql.ColumnTimestamp
	NotAfter  mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type MyanggotaRefreshTokensTable struct {
	myanggotaRefreshTokensTable

	NEW myanggotaRefreshTokensTable
}

// AS creates new MyanggotaRefreshTokensTable with assigned alias
func (a MyanggotaRefreshTokensTable) AS(alias string) *MyanggotaRefreshTokensTable {
	return newMyanggotaRefreshTokensTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new MyanggotaRefreshTokensTable with assigned schema name
func (a MyanggotaRefreshTokensTable) FromSchema(schemaName string) *MyanggotaRefreshTokensTable {
	return newMyanggotaRefreshTokensTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new MyanggotaRefreshTokensTable with assigned table prefix
func (a MyanggotaRefreshTokensTable) WithPrefix(prefix string) *MyanggotaRefreshTokensTable {
	return newMyanggotaRefreshTokensTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new MyanggotaRefreshTokensTable with assigned table suffix
func (a MyanggotaRefreshTokensTable) WithSuffix(suffix string) *MyanggotaRefreshTokensTable {
	return newMyanggotaRefreshTokensTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newMyanggotaRefreshTokensTable(schemaName, tableName, alias string) *MyanggotaRefreshTokensTable {
	return &MyanggotaRefreshTokensTable{
		myanggotaRefreshTokensTable: newMyanggotaRefreshTokensTableImpl(schemaName, tableName, alias),
		NEW:                         newMyanggotaRefreshTokensTableImpl("", "new", ""),
	}
}

func newMyanggotaRefreshTokensTableImpl(schemaName, tableName, alias string) myanggotaRefreshTokensTable {
	var (
		TokenColumn     = mysql.StringColumn("token")
		LoginIDColumn   = mysql.IntegerColumn("login_id")
		CreatedAtColumn = mysql.TimestampColumn("created_at")
		NotAfterColumn  = mysql.TimestampColumn("not_after")
		allColumns      = mysql.ColumnList{TokenColumn, LoginIDColumn, CreatedAtColumn, NotAfterColumn}
		mutableColumns  = mysql.ColumnList{TokenColumn, LoginIDColumn, CreatedAtColumn, NotAfterColumn}
	)

	return myanggotaRefreshTokensTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Token:     TokenColumn,
		LoginID:   LoginIDColumn,
		CreatedAt: CreatedAtColumn,
		NotAfter:  NotAfterColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
