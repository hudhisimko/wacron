//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var LinkUpdate = newLinkUpdateTable("simko_data", "link_update", "")

type linkUpdateTable struct {
	mysql.Table

	// Columns
	Link        mysql.ColumnString
	Harusupdate mysql.ColumnString
	TglUpdate   mysql.ColumnDate

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type LinkUpdateTable struct {
	linkUpdateTable

	NEW linkUpdateTable
}

// AS creates new LinkUpdateTable with assigned alias
func (a LinkUpdateTable) AS(alias string) *LinkUpdateTable {
	return newLinkUpdateTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new LinkUpdateTable with assigned schema name
func (a LinkUpdateTable) FromSchema(schemaName string) *LinkUpdateTable {
	return newLinkUpdateTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new LinkUpdateTable with assigned table prefix
func (a LinkUpdateTable) WithPrefix(prefix string) *LinkUpdateTable {
	return newLinkUpdateTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new LinkUpdateTable with assigned table suffix
func (a LinkUpdateTable) WithSuffix(suffix string) *LinkUpdateTable {
	return newLinkUpdateTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newLinkUpdateTable(schemaName, tableName, alias string) *LinkUpdateTable {
	return &LinkUpdateTable{
		linkUpdateTable: newLinkUpdateTableImpl(schemaName, tableName, alias),
		NEW:             newLinkUpdateTableImpl("", "new", ""),
	}
}

func newLinkUpdateTableImpl(schemaName, tableName, alias string) linkUpdateTable {
	var (
		LinkColumn        = mysql.StringColumn("link")
		HarusupdateColumn = mysql.StringColumn("harusupdate")
		TglUpdateColumn   = mysql.DateColumn("tgl_update")
		allColumns        = mysql.ColumnList{LinkColumn, HarusupdateColumn, TglUpdateColumn}
		mutableColumns    = mysql.ColumnList{LinkColumn, HarusupdateColumn, TglUpdateColumn}
	)

	return linkUpdateTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Link:        LinkColumn,
		Harusupdate: HarusupdateColumn,
		TglUpdate:   TglUpdateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
