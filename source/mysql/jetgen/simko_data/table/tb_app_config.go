//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var TbAppConfig = newTbAppConfigTable("simko_data", "tb_app_config", "")

type tbAppConfigTable struct {
	mysql.Table

	// Columns
	Key   mysql.ColumnString
	Value mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type TbAppConfigTable struct {
	tbAppConfigTable

	NEW tbAppConfigTable
}

// AS creates new TbAppConfigTable with assigned alias
func (a TbAppConfigTable) AS(alias string) *TbAppConfigTable {
	return newTbAppConfigTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TbAppConfigTable with assigned schema name
func (a TbAppConfigTable) FromSchema(schemaName string) *TbAppConfigTable {
	return newTbAppConfigTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TbAppConfigTable with assigned table prefix
func (a TbAppConfigTable) WithPrefix(prefix string) *TbAppConfigTable {
	return newTbAppConfigTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TbAppConfigTable with assigned table suffix
func (a TbAppConfigTable) WithSuffix(suffix string) *TbAppConfigTable {
	return newTbAppConfigTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTbAppConfigTable(schemaName, tableName, alias string) *TbAppConfigTable {
	return &TbAppConfigTable{
		tbAppConfigTable: newTbAppConfigTableImpl(schemaName, tableName, alias),
		NEW:              newTbAppConfigTableImpl("", "new", ""),
	}
}

func newTbAppConfigTableImpl(schemaName, tableName, alias string) tbAppConfigTable {
	var (
		KeyColumn      = mysql.StringColumn("key")
		ValueColumn    = mysql.StringColumn("value")
		allColumns     = mysql.ColumnList{KeyColumn, ValueColumn}
		mutableColumns = mysql.ColumnList{ValueColumn}
	)

	return tbAppConfigTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Key:   KeyColumn,
		Value: ValueColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
