//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Mysekolah = newMysekolahTable("simko_data", "mysekolah", "")

type mysekolahTable struct {
	mysql.Table

	// Columns
	Username    mysql.ColumnString
	KdReferal   mysql.ColumnString
	Nama        mysql.ColumnString
	NoIdentitas mysql.ColumnString
	Alamat      mysql.ColumnString
	Jkelamin    mysql.ColumnString
	Password    mysql.ColumnString
	Email       mysql.ColumnString
	TglReg      mysql.ColumnTimestamp
	Status      mysql.ColumnString
	Keterangan  mysql.ColumnString
	FotoProfile mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type MysekolahTable struct {
	mysekolahTable

	NEW mysekolahTable
}

// AS creates new MysekolahTable with assigned alias
func (a MysekolahTable) AS(alias string) *MysekolahTable {
	return newMysekolahTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new MysekolahTable with assigned schema name
func (a MysekolahTable) FromSchema(schemaName string) *MysekolahTable {
	return newMysekolahTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new MysekolahTable with assigned table prefix
func (a MysekolahTable) WithPrefix(prefix string) *MysekolahTable {
	return newMysekolahTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new MysekolahTable with assigned table suffix
func (a MysekolahTable) WithSuffix(suffix string) *MysekolahTable {
	return newMysekolahTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newMysekolahTable(schemaName, tableName, alias string) *MysekolahTable {
	return &MysekolahTable{
		mysekolahTable: newMysekolahTableImpl(schemaName, tableName, alias),
		NEW:            newMysekolahTableImpl("", "new", ""),
	}
}

func newMysekolahTableImpl(schemaName, tableName, alias string) mysekolahTable {
	var (
		UsernameColumn    = mysql.StringColumn("username")
		KdReferalColumn   = mysql.StringColumn("kd_referal")
		NamaColumn        = mysql.StringColumn("nama")
		NoIdentitasColumn = mysql.StringColumn("no_identitas")
		AlamatColumn      = mysql.StringColumn("alamat")
		JkelaminColumn    = mysql.StringColumn("jkelamin")
		PasswordColumn    = mysql.StringColumn("password")
		EmailColumn       = mysql.StringColumn("email")
		TglRegColumn      = mysql.TimestampColumn("tgl_reg")
		StatusColumn      = mysql.StringColumn("status")
		KeteranganColumn  = mysql.StringColumn("keterangan")
		FotoProfileColumn = mysql.StringColumn("foto_profile")
		allColumns        = mysql.ColumnList{UsernameColumn, KdReferalColumn, NamaColumn, NoIdentitasColumn, AlamatColumn, JkelaminColumn, PasswordColumn, EmailColumn, TglRegColumn, StatusColumn, KeteranganColumn, FotoProfileColumn}
		mutableColumns    = mysql.ColumnList{KdReferalColumn, NamaColumn, NoIdentitasColumn, AlamatColumn, JkelaminColumn, PasswordColumn, EmailColumn, TglRegColumn, StatusColumn, KeteranganColumn, FotoProfileColumn}
	)

	return mysekolahTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Username:    UsernameColumn,
		KdReferal:   KdReferalColumn,
		Nama:        NamaColumn,
		NoIdentitas: NoIdentitasColumn,
		Alamat:      AlamatColumn,
		Jkelamin:    JkelaminColumn,
		Password:    PasswordColumn,
		Email:       EmailColumn,
		TglReg:      TglRegColumn,
		Status:      StatusColumn,
		Keterangan:  KeteranganColumn,
		FotoProfile: FotoProfileColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
