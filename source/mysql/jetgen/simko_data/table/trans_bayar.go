//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var TransBayar = newTransBayarTable("simko_data", "trans_bayar", "")

type transBayarTable struct {
	mysql.Table

	// Columns
	Transid    mysql.ColumnInteger
	Tanggal    mysql.ColumnDate
	MemberID   mysql.ColumnString
	Bank       mysql.ColumnString
	Bayar      mysql.ColumnInteger
	Keterangan mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type TransBayarTable struct {
	transBayarTable

	NEW transBayarTable
}

// AS creates new TransBayarTable with assigned alias
func (a TransBayarTable) AS(alias string) *TransBayarTable {
	return newTransBayarTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TransBayarTable with assigned schema name
func (a TransBayarTable) FromSchema(schemaName string) *TransBayarTable {
	return newTransBayarTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TransBayarTable with assigned table prefix
func (a TransBayarTable) WithPrefix(prefix string) *TransBayarTable {
	return newTransBayarTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TransBayarTable with assigned table suffix
func (a TransBayarTable) WithSuffix(suffix string) *TransBayarTable {
	return newTransBayarTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTransBayarTable(schemaName, tableName, alias string) *TransBayarTable {
	return &TransBayarTable{
		transBayarTable: newTransBayarTableImpl(schemaName, tableName, alias),
		NEW:             newTransBayarTableImpl("", "new", ""),
	}
}

func newTransBayarTableImpl(schemaName, tableName, alias string) transBayarTable {
	var (
		TransidColumn    = mysql.IntegerColumn("transid")
		TanggalColumn    = mysql.DateColumn("tanggal")
		MemberIDColumn   = mysql.StringColumn("member_id")
		BankColumn       = mysql.StringColumn("bank")
		BayarColumn      = mysql.IntegerColumn("bayar")
		KeteranganColumn = mysql.StringColumn("keterangan")
		allColumns       = mysql.ColumnList{TransidColumn, TanggalColumn, MemberIDColumn, BankColumn, BayarColumn, KeteranganColumn}
		mutableColumns   = mysql.ColumnList{TanggalColumn, MemberIDColumn, BankColumn, BayarColumn, KeteranganColumn}
	)

	return transBayarTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Transid:    TransidColumn,
		Tanggal:    TanggalColumn,
		MemberID:   MemberIDColumn,
		Bank:       BankColumn,
		Bayar:      BayarColumn,
		Keterangan: KeteranganColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
