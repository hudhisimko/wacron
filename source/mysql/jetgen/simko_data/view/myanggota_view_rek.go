//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/mysql"
)

var MyanggotaViewRek = newMyanggotaViewRekTable("simko_data", "myanggota_view_rek", "")

type myanggotaViewRekTable struct {
	mysql.Table

	// Columns
	Modul         mysql.ColumnString
	NoRekening    mysql.ColumnString
	NamaAnggota   mysql.ColumnString
	Alamat        mysql.ColumnString
	NoHp          mysql.ColumnString
	KodeLembaga   mysql.ColumnString
	NamaLembaga   mysql.ColumnString
	URLLembaga    mysql.ColumnString
	StatusLembaga mysql.ColumnInteger
	StatusMobile  mysql.ColumnBool
	StatusData    mysql.ColumnBool
	Saring        mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type MyanggotaViewRekTable struct {
	myanggotaViewRekTable

	NEW myanggotaViewRekTable
}

// AS creates new MyanggotaViewRekTable with assigned alias
func (a MyanggotaViewRekTable) AS(alias string) *MyanggotaViewRekTable {
	return newMyanggotaViewRekTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new MyanggotaViewRekTable with assigned schema name
func (a MyanggotaViewRekTable) FromSchema(schemaName string) *MyanggotaViewRekTable {
	return newMyanggotaViewRekTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new MyanggotaViewRekTable with assigned table prefix
func (a MyanggotaViewRekTable) WithPrefix(prefix string) *MyanggotaViewRekTable {
	return newMyanggotaViewRekTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new MyanggotaViewRekTable with assigned table suffix
func (a MyanggotaViewRekTable) WithSuffix(suffix string) *MyanggotaViewRekTable {
	return newMyanggotaViewRekTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newMyanggotaViewRekTable(schemaName, tableName, alias string) *MyanggotaViewRekTable {
	return &MyanggotaViewRekTable{
		myanggotaViewRekTable: newMyanggotaViewRekTableImpl(schemaName, tableName, alias),
		NEW:                   newMyanggotaViewRekTableImpl("", "new", ""),
	}
}

func newMyanggotaViewRekTableImpl(schemaName, tableName, alias string) myanggotaViewRekTable {
	var (
		ModulColumn         = mysql.StringColumn("modul")
		NoRekeningColumn    = mysql.StringColumn("no_rekening")
		NamaAnggotaColumn   = mysql.StringColumn("nama_anggota")
		AlamatColumn        = mysql.StringColumn("alamat")
		NoHpColumn          = mysql.StringColumn("no_hp")
		KodeLembagaColumn   = mysql.StringColumn("kode_lembaga")
		NamaLembagaColumn   = mysql.StringColumn("nama_lembaga")
		URLLembagaColumn    = mysql.StringColumn("url_lembaga")
		StatusLembagaColumn = mysql.IntegerColumn("status_lembaga")
		StatusMobileColumn  = mysql.BoolColumn("status_mobile")
		StatusDataColumn    = mysql.BoolColumn("status_data")
		SaringColumn        = mysql.StringColumn("saring")
		allColumns          = mysql.ColumnList{ModulColumn, NoRekeningColumn, NamaAnggotaColumn, AlamatColumn, NoHpColumn, KodeLembagaColumn, NamaLembagaColumn, URLLembagaColumn, StatusLembagaColumn, StatusMobileColumn, StatusDataColumn, SaringColumn}
		mutableColumns      = mysql.ColumnList{ModulColumn, NoRekeningColumn, NamaAnggotaColumn, AlamatColumn, NoHpColumn, KodeLembagaColumn, NamaLembagaColumn, URLLembagaColumn, StatusLembagaColumn, StatusMobileColumn, StatusDataColumn, SaringColumn}
	)

	return myanggotaViewRekTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Modul:         ModulColumn,
		NoRekening:    NoRekeningColumn,
		NamaAnggota:   NamaAnggotaColumn,
		Alamat:        AlamatColumn,
		NoHp:          NoHpColumn,
		KodeLembaga:   KodeLembagaColumn,
		NamaLembaga:   NamaLembagaColumn,
		URLLembaga:    URLLembagaColumn,
		StatusLembaga: StatusLembagaColumn,
		StatusMobile:  StatusMobileColumn,
		StatusData:    StatusDataColumn,
		Saring:        SaringColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
