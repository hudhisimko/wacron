//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/mysql"
)

var MyanggotaViewLembaga = newMyanggotaViewLembagaTable("simko_data", "myanggota_view_lembaga", "")

type myanggotaViewLembagaTable struct {
	mysql.Table

	// Columns
	NamaAnggota   mysql.ColumnString
	Alamat        mysql.ColumnString
	NoHp          mysql.ColumnString
	KodeLembaga   mysql.ColumnString
	NamaLembaga   mysql.ColumnString
	URLLembaga    mysql.ColumnString
	StatusLembaga mysql.ColumnInteger
	StatusMobile  mysql.ColumnBool
	StatusData    mysql.ColumnBool

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type MyanggotaViewLembagaTable struct {
	myanggotaViewLembagaTable

	NEW myanggotaViewLembagaTable
}

// AS creates new MyanggotaViewLembagaTable with assigned alias
func (a MyanggotaViewLembagaTable) AS(alias string) *MyanggotaViewLembagaTable {
	return newMyanggotaViewLembagaTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new MyanggotaViewLembagaTable with assigned schema name
func (a MyanggotaViewLembagaTable) FromSchema(schemaName string) *MyanggotaViewLembagaTable {
	return newMyanggotaViewLembagaTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new MyanggotaViewLembagaTable with assigned table prefix
func (a MyanggotaViewLembagaTable) WithPrefix(prefix string) *MyanggotaViewLembagaTable {
	return newMyanggotaViewLembagaTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new MyanggotaViewLembagaTable with assigned table suffix
func (a MyanggotaViewLembagaTable) WithSuffix(suffix string) *MyanggotaViewLembagaTable {
	return newMyanggotaViewLembagaTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newMyanggotaViewLembagaTable(schemaName, tableName, alias string) *MyanggotaViewLembagaTable {
	return &MyanggotaViewLembagaTable{
		myanggotaViewLembagaTable: newMyanggotaViewLembagaTableImpl(schemaName, tableName, alias),
		NEW:                       newMyanggotaViewLembagaTableImpl("", "new", ""),
	}
}

func newMyanggotaViewLembagaTableImpl(schemaName, tableName, alias string) myanggotaViewLembagaTable {
	var (
		NamaAnggotaColumn   = mysql.StringColumn("nama_anggota")
		AlamatColumn        = mysql.StringColumn("alamat")
		NoHpColumn          = mysql.StringColumn("no_hp")
		KodeLembagaColumn   = mysql.StringColumn("kode_lembaga")
		NamaLembagaColumn   = mysql.StringColumn("nama_lembaga")
		URLLembagaColumn    = mysql.StringColumn("url_lembaga")
		StatusLembagaColumn = mysql.IntegerColumn("status_lembaga")
		StatusMobileColumn  = mysql.BoolColumn("status_mobile")
		StatusDataColumn    = mysql.BoolColumn("status_data")
		allColumns          = mysql.ColumnList{NamaAnggotaColumn, AlamatColumn, NoHpColumn, KodeLembagaColumn, NamaLembagaColumn, URLLembagaColumn, StatusLembagaColumn, StatusMobileColumn, StatusDataColumn}
		mutableColumns      = mysql.ColumnList{NamaAnggotaColumn, AlamatColumn, NoHpColumn, KodeLembagaColumn, NamaLembagaColumn, URLLembagaColumn, StatusLembagaColumn, StatusMobileColumn, StatusDataColumn}
	)

	return myanggotaViewLembagaTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		NamaAnggota:   NamaAnggotaColumn,
		Alamat:        AlamatColumn,
		NoHp:          NoHpColumn,
		KodeLembaga:   KodeLembagaColumn,
		NamaLembaga:   NamaLembagaColumn,
		URLLembaga:    URLLembagaColumn,
		StatusLembaga: StatusLembagaColumn,
		StatusMobile:  StatusMobileColumn,
		StatusData:    StatusDataColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
